/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/rgbscreen_screen/RGBScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

RGBScreenViewBase::RGBScreenViewBase() :
    buttonCallback(this, &RGBScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &RGBScreenViewBase::sliderValueChangedCallbackHandler)
{

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    boxWithBorder1.setPosition(0, 260, 240, 60);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);

    PreviousPageButton.setXY(0, 260);
    PreviousPageButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    PreviousPageButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID18));
    PreviousPageButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    PreviousPageButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    PreviousPageButton.setAction(buttonCallback);

    NextPageButton.setXY(180, 260);
    NextPageButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    NextPageButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID19));
    NextPageButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    NextPageButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    NextPageButton.setAction(buttonCallback);

    textArea1.setXY(97, 14);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID20));

    RedSlider.setXY(31, 49);
    RedSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    RedSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    RedSlider.setValueRange(0, 100);
    RedSlider.setValue(0);
    RedSlider.setNewValueCallback(sliderValueChangedCallback);

    textArea1_1.setXY(85, 96);
    textArea1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID21));

    GreenSlider.setXY(31, 131);
    GreenSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    GreenSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    GreenSlider.setValueRange(0, 100);
    GreenSlider.setValue(0);
    GreenSlider.setNewValueCallback(sliderValueChangedCallback);

    textArea1_2.setXY(94, 173);
    textArea1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID22));

    BlueSlider.setXY(31, 208);
    BlueSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    BlueSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    BlueSlider.setValueRange(0, 100);
    BlueSlider.setValue(0);
    BlueSlider.setNewValueCallback(sliderValueChangedCallback);

    add(box1);
    add(boxWithBorder1);
    add(PreviousPageButton);
    add(NextPageButton);
    add(textArea1);
    add(RedSlider);
    add(textArea1_1);
    add(GreenSlider);
    add(textArea1_2);
    add(BlueSlider);
}

void RGBScreenViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void RGBScreenViewBase::afterTransition()
{
    //Interaction1
    //When screen is entered call virtual function
    //Call SetRGB
    SetRGB();
}

void RGBScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &PreviousPageButton)
    {
        //PreviousPageInteraction
        //When PreviousPageButton clicked change screen to LightScreen
        //Go to LightScreen with no screen transition
        application().gotoLightScreenScreenNoTransition();
    }
    else if (&src == &NextPageButton)
    {
        //NextPageInteraction
        //When NextPageButton clicked change screen to MainScreen
        //Go to MainScreen with no screen transition
        application().gotoMainScreenScreenNoTransition();
    }
}

void RGBScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &RedSlider)
    {
        //Interaction2
        //When RedSlider value changed call virtual function
        //Call SetR
        SetR(value);
    }
    else if (&src == &GreenSlider)
    {
        //Interaction3
        //When GreenSlider value changed call virtual function
        //Call SetG
        SetG(value);
    }
    else if (&src == &BlueSlider)
    {
        //Interaction4
        //When BlueSlider value changed call virtual function
        //Call SetB
        SetB(value);
    }
}
